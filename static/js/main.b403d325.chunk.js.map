{"version":3,"sources":["movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAiCeA,MA7Bf,YAA2D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OACjD,OACE,sBAAKC,UAAY,QAAjB,UACA,qBAAKA,UAAU,gBAAgBC,IAAKH,EAAQI,IAAKN,EAAOA,MAAQA,IAChE,gCACE,oBAAII,UAAU,eAAd,SAA8BJ,IAC9B,sBAAMI,UAAU,cAAhB,SAA+BL,IAC/B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAIL,UAAU,gBAAd,SAA2CI,GAARC,QAKvC,mBAAGL,UAAU,iBAAb,SAA+BH,EAAQS,MAAM,EAAG,cCmDvCC,E,4MA7DbC,MAAQ,CAENC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAOAC,IAAMC,IAAI,4DAPV,gBAIJJ,EAJI,EAERK,KACEA,KACEL,OAMN,EAAKM,SAAS,CACZN,SACAD,WAAW,IAZH,2C,uDAgBZ,WACEQ,KAAKN,c,oBAEP,WACE,MAGIM,KAAKT,MAFPE,EADF,EACEA,OACAD,EAFF,EAEEA,UAEF,OACA,8BACGA,EACC,qBAAKT,UAAY,SAAjB,SACE,sBAAMA,UAAW,eAAjB,yBAGA,qBAAKA,UAAY,SAAjB,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEExB,GAAMwB,EAAMxB,GACZC,KAAQuB,EAAMvB,KACdC,MAASsB,EAAMtB,MACfC,QAAWqB,EAAMrB,QACjBC,OAAUoB,EAAMC,mBAChBpB,OAAUmB,EAAMnB,QANTmB,EAAMxB,e,GAzCX0B,IAAMC,WCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.b403d325.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport \"./css/Movie.css\"\n\nfunction Movie ({id, year, title, summary, poster, genres}){\n  return (\n    <div className = \"movie\">\n    <img className=\"movie__poster\" src={poster} alt={title} title ={title}/>\n    <div>\n      <h3 className=\"movie__title\">{title}</h3>\n      <span className=\"movie__year\">{year}</span>\n      <ul className=\"movie__genres\">\n        {genres.map((genre, index) =>\n          <li className=\"genres__genre\" key={index}>{genre}</li>\n          )\n        }\n        {/* map의 각각 item에는 key 값이 필요하다. map 에는 index를 쓸수있다. */}\n      </ul>\n      <p className=\"movie__summary\">{summary.slice(0, 180)}</p>\n    </div>\n    </div>\n  )\n}\n\nMovie.propTypes = {\n  id : PropTypes.number.isRequired,\n  year : PropTypes.number.isRequired,\n  title : PropTypes.string.isRequired,\n  summary : PropTypes.string.isRequired,\n  poster : PropTypes.string.isRequired,\n  genres : PropTypes.array.isRequired\n}\n\nexport default Movie;","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport axios from \"axios\";\nimport Movie from './movie';\nimport \"./css/Movie.css\"\n\nclass App extends React.Component {\n  // return 이 없다. React.component에 render method를 가져온다. class-는 클래스인데 보여주기 위해서는 render method안에 넣어줘야한다. 리엑트는 자동으로 class component안에 render method를 자동으로 렌더링한다\n  state = {\n    //변하는 state는 여기에 넣는다. 바꾸고싶은 데이터를 넣는거다.\n    isLoading: true,\n    movies: []\n  }\n  getMovies = async () => {\n    const {\n      data: {\n        data: {\n          movies\n        }\n      }\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n    // 시간이 걸리기 때문에 async - await / wait for axios to finish. \n    \n    this.setState({\n      movies,\n      isLoading: false\n    })\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const {\n      movies,\n      isLoading\n    } = this.state;\n    return (\n    <div> \n      {isLoading ? (\n        <div className = \"loader\">\n          <span className =\"loader__text\">Loading..</span>\n        </div>\n        ) : ( \n          <div className = \"movies\">\n            {movies.map(movie => (\n              <Movie \n                key = {movie.id}\n                id = {movie.id} \n                year = {movie.year} \n                title = {movie.title}\n                summary = {movie.summary} \n                poster = {movie.medium_cover_image}\n                genres = {movie.genres}\n              />\n            ))}\n          </div> \n        )\n      } \n    </div>\n  )\n  // react component does\n  // mouting - being born\n  // Updating - updating\n  // Unmounting- when component dies. when page changes\n  // construnctor - con\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App>\n    </App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// Application can only render one component at a time."],"sourceRoot":""}